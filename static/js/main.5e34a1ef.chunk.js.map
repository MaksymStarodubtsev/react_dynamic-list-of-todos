{"version":3,"sources":["api/api.js","components/TodoList/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["API_URL","getAllTodos","fetch","then","response","json","data","getUsersInfo","userId","Todo","todo","setSelectedUserId","selectedUserId","completed","title","id","className","type","checked","readOnly","onClick","TodoList","state","todos","map","CurrentUser","users","clearSelectedUser","name","email","phone","App","user","setState","setTodos","callback","setUser","a","this","prevProps","prevState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e34a1ef.chunk.js","sourcesContent":["const API_URL = 'https://mate-api.herokuapp.com';\n\nexport function getAllTodos() {\n  return fetch(`${API_URL}/todos/`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport const getUsersInfo = userId => (\n  fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(response => response.data)\n);\n","import React from 'react';\n\nexport const Todo = ({ todo, setSelectedUserId, selectedUserId }) => {\n  const {completed, title, id, userId } = todo;\n\n  return (\n    <li className={`TodoList__item ${completed\n      ? 'TodoList__item--checked'\n      : 'TodoList__item--unchecked'\n    }`\n    }\n    >\n\n      <label>\n        {\n          completed\n            ? <input type=\"checkbox\" checked readOnly />\n            : <input type=\"checkbox\" readOnly />\n        }\n        <p>{title}</p>\n      </label>\n\n      <button\n        className={`TodoList__user-button button ${userId === selectedUserId\n          ? 'TodoList__user-button--selected' : ''}`}\n        type=\"button\"\n        onClick={() => setSelectedUserId(userId)}\n      >\n        User&nbsp;#\n        {id}\n      </button>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from './Todo/Todo';\nimport './TodoList.scss';\n\nexport const TodoList = ({ state, setSelectedUserId }) => {\n  const { todos, selectedUserId } = state;\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li>\n              <Todo\n                todo={todo}\n                setSelectedUserId={setSelectedUserId}\n                selectedUserId={selectedUserId}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ users, clearSelectedUser }) => {\nconst { id, name, email, phone } = users;\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>Selected user:{id}</span></h2>\n\n      <h3 className=\"CurrentUser__name\">{name}</h3>\n      <p className=\"CurrentUser__email\">{email}</p>\n      <p className=\"CurrentUser__phone\">{phone}</p>\n      <button\n        type=\"button\"\n        onClick={() => clearSelectedUser()}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAllTodos, getUsersInfo } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    user: {},\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    this.setTodos(getAllTodos);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.selectedUserId !== this.state.selectedUserId) {\n      this.setUser(getUsersInfo);\n    }\n  }\n\n  setSelectedUserId = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  setTodos = (callback) => {\n    callback().then(todos => this.setState({ todos }));\n  }\n\n  setUser = async(callback) => {\n    callback(this.state.selectedUserId).then(user => this.setState({ user }));\n  }\n\n  clearSelectedUser = () => {\n    this.setState({ user: {}});\n  }\n\n  render() {\n    const { user, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            state={this.state}\n            setSelectedUserId={this.setSelectedUserId}\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => this.setTodos(getAllTodos)}\n        >\n          click\n        </button>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {\n              selectedUserId && selectedUserId\n                ? <CurrentUser users={user} clearSelectedUser={this.clearSelectedUser} />\n                : 'No user selected'\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}